{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport 'tachyons';\n/*// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'de24ba7f7eec497a95d403c448077725'\n});\nconst Polygonparticles = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('imageId');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiBox.left_col * width,\n        rightCol: width - clarifaiBox.right_col * width,\n        topRow: clarifaiBox.top_row * height,\n        bottomRow: height - clarifaiBox.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonChange = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        } //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          counter: data.counter,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedin: false\n        });\n      } else {\n        this.setState({\n          isSignedin: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n      route: 'signin',\n      isSignedin: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        counter: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      imageUrl,\n      route,\n      box,\n      isSignedin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: Polygonparticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedin: isSignedin,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonChange: this.onButtonChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","SignIn","Register","Particles","Clarifai","app","App","apiKey","Polygonparticles","polygon","enable","type","move","radius","constructor","calculateFaceLocation","data","clarifaiBox","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonChange","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","id","user","json","count","Object","assign","entries","catch","err","console","log","loadUser","name","email","counter","joined","onRouteChange","route","isSignedin","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,UAAP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAC;AADoB,CAAjB,CAAZ;AAKA,MAAMC,gBAAgB,GAAG;AACLC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,IADH;AAELC,IAAAA,IAAI,EAAE,QAFD;AAGLC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE;AADN;AAHD;AADJ,CAAzB;;AAUA,MAAMP,GAAN,SAAkBX,SAAlB,CAA4B;AAC1BmB,EAAAA,WAAW,GAAE;AACX;;AADW,SAqBbC,qBArBa,GAqBYC,IAAD,IAAU;AAChC,YAAMC,WAAW,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAhE;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,aAAO;AACLC,QAAAA,OAAO,EAAEX,WAAW,CAACY,QAAZ,GAAuBJ,KAD3B;AAELK,QAAAA,QAAQ,EAAEL,KAAK,GAAIR,WAAW,CAACc,SAAZ,GAAwBN,KAFtC;AAGLO,QAAAA,MAAM,EAAEf,WAAW,CAACgB,OAAZ,GAAsBN,MAHzB;AAILO,QAAAA,SAAS,EAAEP,MAAM,GAAIV,WAAW,CAACkB,UAAZ,GAAyBR;AAJzC,OAAP;AAMD,KAhCY;;AAAA,SAkCbS,cAlCa,GAkCKC,GAAD,IAAS;AACtB,WAAKC,QAAL,CAAc;AAACD,QAAAA,GAAG,EAACA;AAAL,OAAd;AACH,KApCY;;AAAA,SAsCbE,aAtCa,GAsCIC,KAAD,IAAW;AACzB,WAAKF,QAAL,CAAc;AAACG,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,KAxCY;;AAAA,SA0CbC,cA1Ca,GA0CI,MAAM;AACtB,WAAKN,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWL;AAAtB,OAAd;AAECpC,MAAAA,GAAG,CAAC0C,MAAJ,CAAWC,OAAX,CAAmB5C,QAAQ,CAAC6C,iBAA5B,EAA+C,KAAKH,KAAL,CAAWL,KAA1D,EACCS,IADD,CACMC,QAAQ,IAAI;AAChB,YAAGA,QAAH,EAAa;AACXC,UAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,YAAAA,MAAM,EAAE,KAD2B;AAEnCC,YAAAA,OAAO,EAAE;AAAC,8BAAiB;AAAlB,aAF0B;AAGnCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,cAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWa,IAAX,CAAgBD;AADD,aAAf;AAH6B,WAAhC,CAAL,CAOCR,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACS,IAAT,EAPlB,EAQCV,IARD,CAQMW,KAAK,IAAI;AACX,iBAAKvB,QAAL,CAAcwB,MAAM,CAACC,MAAP,CAAc,KAAKjB,KAAL,CAAWa,IAAzB,EAA8B;AAACK,cAAAA,OAAO,EAAEH;AAAV,aAA9B,CAAd;AACL,WAVC;AAWD,SAbe,CAcd;;;AACA,aAAKzB,cAAL,CAAoB,KAAKrB,qBAAL,CAA2BoC,QAA3B,CAApB;AACD,OAjBH,EAkBCc,KAlBD,CAkBOC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,OApBJ;AAqBD,KAlEY;;AAAA,SAoEbG,QApEa,GAoEDrD,IAAD,IAAU;AACnB,WAAKsB,QAAL,CAAc;AAACqB,QAAAA,IAAI,EAAC;AAClBD,UAAAA,EAAE,EAAE1C,IAAI,CAAC0C,EADS;AAElBY,UAAAA,IAAI,EAAEtD,IAAI,CAACsD,IAFO;AAGlBC,UAAAA,KAAK,EAAEvD,IAAI,CAACuD,KAHM;AAIlBC,UAAAA,OAAO,EAAExD,IAAI,CAACwD,OAJI;AAKlBC,UAAAA,MAAM,EAAEzD,IAAI,CAACyD;AALK;AAAN,OAAd;AAQD,KA7EY;;AAAA,SA+EbC,aA/Ea,GA+EIC,KAAD,IAAW;AACzB,UAAGA,KAAK,KAAK,SAAb,EAAuB;AACrB,aAAKrC,QAAL,CAAc;AAACsC,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD,OAFD,MAGK;AACH,aAAKtC,QAAL,CAAc;AAACsC,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD;;AACD,WAAKtC,QAAL,CAAc;AAACqC,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KAvFY;;AAEX,SAAK7B,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAG,EADG;AAEXI,MAAAA,QAAQ,EAAE,EAFC;AAGXR,MAAAA,GAAG,EAAE,EAHM;AAIXsC,MAAAA,KAAK,EAAE,QAJI;AAKXC,MAAAA,UAAU,EAAE,KALD;AAMXjB,MAAAA,IAAI,EACJ;AACED,QAAAA,EAAE,EAAE,EADN;AAEEY,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,KAAK,EAAE,EAHT;AAIEC,QAAAA,OAAO,EAAE,CAJX;AAKEC,QAAAA,MAAM,EAAE;AALV;AAPW,KAAb;AAeD;;AAuEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhC,MAAAA,QAAF;AAAY8B,MAAAA,KAAZ;AAAmBtC,MAAAA,GAAnB;AAAwBuC,MAAAA;AAAxB,QAAuC,KAAK9B,KAAlD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAE,WAAtB;AAAkC,QAAA,MAAM,EAAItC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEoE,UAAxB;AAAoC,QAAA,aAAa,EAAE,KAAKF;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAHF,EAIIC,KAAK,KAAK,MAAV,gBACE;AAAA,gCACE,QAAC,IAAD;AACA,UAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWa,IAAX,CAAgBW,IADtB;AAEA,UAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWa,IAAX,CAAgBK;AAFzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AAAe,UAAA,aAAa,EAAE,KAAKzB,aAAnC;AAAkD,UAAA,cAAc,EAAE,KAAKK;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,eAAD;AAAiB,UAAA,GAAG,EAAIP,GAAxB;AAA6B,UAAA,QAAQ,EAAEQ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,GAQI8B,KAAK,KAAK,QAAV,gBACE,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAE,KAAKD;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,gBAEE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAI,KAAKL,QAA3B;AAAqC,QAAA,aAAa,EAAE,KAAKK;AAAzD;AAAA;AAAA;AAAA;AAAA,cAdV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA/GyB;;AAiH5B,eAAepE,GAAf","sourcesContent":["import './App.css';\nimport React , { Component } from 'react'; \nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport 'tachyons'; \n\n\n/*// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')*/\n\nconst app = new Clarifai.App({\n  apiKey:'de24ba7f7eec497a95d403c448077725'\n});\n\n\nconst Polygonparticles = {\n                    polygon: {\n                        enable: true,\n                        type: 'inside',\n                        move: {\n                            radius: 10\n                        }\n                    }\n                };\n\nclass App extends Component { \n  constructor(){\n    super()\n    this.state = {\n      input : '', \n      imageUrl: '', \n      box: [],\n      route: 'signin',\n      isSignedin: false,\n      user:\n      { \n        id: '',\n        name: '',\n        email: '',\n        counter: 0,\n        joined: ''\n      }\n    }\n  } \n\n  \n\n  calculateFaceLocation = (data) => {\n    const clarifaiBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('imageId');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiBox.left_col * width, \n      rightCol: width - (clarifaiBox.right_col * width),\n      topRow: clarifaiBox.top_row * height,\n      bottomRow: height - (clarifaiBox.bottom_row * height) \n     };\n  }\n\n  displayFaceBox = (box) => {\n      this.setState({box:box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value}); \n  }\n\n  onButtonChange = () => {\n   this.setState({imageUrl: this.state.input});\n\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => {\n      if(response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type' : 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n            this.setState(Object.assign(this.state.user,{entries: count} ))\n      })\n      }\n        //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n    .catch(err => {\n        console.log(err);\n       });\n  }\n\n  loadUser = (data) => {\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      counter: data.counter,\n      joined: data.joined\n\n    }})\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState({isSignedin: false})\n    }\n    else {\n      this.setState({isSignedin: true})\n    }\n    this.setState({route: route});\n  }\n  render() {\n    const { imageUrl, route, box, isSignedin } = this.state ; \n    return (\n      <div className=\"App\"> \n        <Particles className= 'particles' params = {Polygonparticles}/>\n        <Navigation isSignedin={isSignedin} onRouteChange={this.onRouteChange} />\n        <Logo /> \n        { route === 'home'\n          ? <div>\n              <Rank\n              name={this.state.user.name} \n              entries={this.state.user.entries}/> \n              <ImageLinkForm onInputChange={this.onInputChange} onButtonChange={this.onButtonChange} /> \n              <FaceRecognition box = {box} imageUrl={imageUrl}/>  \n            </div>\n          : ( route === 'signin' \n              ? <SignIn onRouteChange={this.onRouteChange} />\n              : <Register loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n            ) \n        }\n      </div> \n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}