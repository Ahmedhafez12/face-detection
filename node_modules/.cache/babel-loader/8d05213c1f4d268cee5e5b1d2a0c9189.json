{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport Particles from 'react-particles-js'; // implements nodejs wrappers for HTMLCanvasElement, HTMLImageElement, ImageData\n\nimport * as canvas from 'canvas';\nimport * as faceapi from 'face-api.js'; // patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Canvas,\n  Image\n} = canvas;\nfaceapi.env.monkeyPatch({\n  Canvas,\n  Image\n});\nconst image = document.getElementById('myImg');\nconst Polygonparticles = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonChange = () => {\n      const link = this.setState({\n        imageUrl: this.state.input\n      });\n\n      const detections = async () => {\n        await faceapi.detectAllFaces(link);\n      }; // resize the detected boxes in case your displayed image has a different size then the original\n\n\n      const detectionsForSize = faceapi.resizeResults(detections, {\n        width: link.width,\n        height: link.height\n      }); // draw them into a canvas\n\n      const canvas = document.getElementById('myImg');\n      canvas.width = link.width;\n      canvas.height = link.height;\n      const image = faceapi.drawDetections(canvas, detectionsForSize);\n      const myImg = document.getElementById('myImg');\n      myImg.src = image.src;\n      console.log(\"click!\");\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: 'https://images.unsplash.com/photo-1612896488082-7271dc0ed30c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1528&q=80'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: Polygonparticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonChange: this.onButtonChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","canvas","faceapi","Canvas","Image","env","monkeyPatch","image","document","getElementById","Polygonparticles","polygon","enable","type","move","radius","App","constructor","onInputChange","event","setState","input","target","value","onButtonChange","link","imageUrl","state","detections","detectAllFaces","detectionsForSize","resizeResults","width","height","drawDetections","myImg","src","console","log","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React , { Component } from 'react'; \nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport Particles from 'react-particles-js';\n// implements nodejs wrappers for HTMLCanvasElement, HTMLImageElement, ImageData\nimport * as canvas from 'canvas';\nimport * as faceapi from 'face-api.js';\n\n\n// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')\n\n\nconst Polygonparticles = {\n                    polygon: {\n                        enable: true,\n                        type: 'inside',\n                        move: {\n                            radius: 10\n                        }\n                    }\n                };\n\nclass App extends Component { \n  constructor(){\n    super()\n    this.state = {\n      input : '', \n      imageUrl: 'https://images.unsplash.com/photo-1612896488082-7271dc0ed30c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1528&q=80',\n    }\n  } \n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value}); \n  }\n\n  onButtonChange = () => {\n    const link = this.setState({imageUrl: this.state.input})\n    const detections = async () => { await faceapi.detectAllFaces(link) } \n\n    // resize the detected boxes in case your displayed image has a different size then the original\n    const detectionsForSize = faceapi.resizeResults(detections, { width: link.width, height: link.height })\n    // draw them into a canvas\n    const canvas = document.getElementById('myImg')\n    canvas.width = link.width\n    canvas.height = link.height\n    const image = faceapi.drawDetections(canvas, detectionsForSize)\n\n    const myImg = document.getElementById('myImg')\n    myImg.src = image.src \n\n    console.log(\"click!\");\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <Particles className= 'particles' params = {Polygonparticles}\n        />\n        <Navigation />\n        <Logo /> \n        <Rank /> \n        <ImageLinkForm onInputChange={this.onInputChange} onButtonChange={this.onButtonChange} /> \n        <FaceRecognition imageUrl={this.state.imageUrl}/>  \n      </div> \n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}