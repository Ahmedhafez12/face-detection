{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport SignIn from './components/SignIn/SignIn';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport 'tachyons';\n/*// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'de24ba7f7eec497a95d403c448077725'\n});\nconst Polygonparticles = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('imageId');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiBox.left_col * width,\n        rightCol: width - clarifaiBox.right_col * width,\n        topRow: clarifaiBox.top_row * height,\n        bottomRow: height - clarifaiBox.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonChange = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      /*const detections = async () => { await faceapi.detectAllFaces(link) } \n       const myImg = document.getElementById('myImg')\n      myImg.src = image.src */\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => {\n        console.log(err);\n      });\n      console.log(\"click!\");\n    };\n\n    this.onRouteChange = () => {\n      this.setState({\n        route: 'home'\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n      route: 'signin'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: Polygonparticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonChange: this.onButtonChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","SignIn","Particles","Clarifai","app","App","apiKey","Polygonparticles","polygon","enable","type","move","radius","constructor","calculateFaceLocation","data","clarifaiBox","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonChange","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React , { Component } from 'react'; \nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport SignIn from './components/SignIn/SignIn';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport 'tachyons'; \n\n\n/*// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')*/\n\nconst app = new Clarifai.App({\n  apiKey:'de24ba7f7eec497a95d403c448077725'\n});\n\n\nconst Polygonparticles = {\n                    polygon: {\n                        enable: true,\n                        type: 'inside',\n                        move: {\n                            radius: 10\n                        }\n                    }\n                };\n\nclass App extends Component { \n  constructor(){\n    super()\n    this.state = {\n      input : '', \n      imageUrl: '', \n      box: [],\n      route: 'signin'\n    }\n  } \n\n  calculateFaceLocation = (data) => {\n    const clarifaiBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('imageId');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiBox.left_col * width, \n      rightCol: width - (clarifaiBox.right_col * width),\n      topRow: clarifaiBox.top_row * height,\n      bottomRow: height - (clarifaiBox.bottom_row * height) \n     };\n  }\n\n  displayFaceBox = (box) => {\n      this.setState({box:box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value}); \n  }\n\n  onButtonChange = () => {\n   this.setState({imageUrl: this.state.input})\n\n    /*const detections = async () => { await faceapi.detectAllFaces(link) } \n\n    const myImg = document.getElementById('myImg')\n    myImg.src = image.src */ \n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => \n        //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        this.displayFaceBox(this.calculateFaceLocation(response))\n       )\n    .catch(err => {\n        console.log(err);\n       });\n      \n\n    console.log(\"click!\");\n  }\n\n  onRouteChange = () => {\n    this.setState({route: 'home'});\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <Particles className= 'particles' params = {Polygonparticles}\n        />\n        <Navigation />\n        <Logo /> \n        { this.state.route === 'signin'\n          ? <SignIn />\n          : <div>\n              <Rank /> \n              <ImageLinkForm onInputChange={this.onInputChange} onButtonChange={this.onButtonChange} /> \n              <FaceRecognition box = {this.state.box} imageUrl={this.state.imageUrl}/>  \n            </div>\n        }\n      </div> \n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}