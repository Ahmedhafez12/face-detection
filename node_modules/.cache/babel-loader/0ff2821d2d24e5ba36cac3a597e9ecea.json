{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport 'tachyons';\n/*// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Polygonparticles = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 20\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: [],\n  route: 'signin',\n  isSignedin: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    counter: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          counter: data.counter,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('imageId');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiBox.left_col * width,\n        rightCol: width - clarifaiBox.right_col * width,\n        topRow: clarifaiBox.top_row * height,\n        bottomRow: height - clarifaiBox.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonChange = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // console.log(this.state.user);\n\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              counter: count.counter\n            })); //this.setState({user:{count}});\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedin: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      imageUrl,\n      route,\n      box,\n      isSignedin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: Polygonparticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedin: isSignedin,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          counter: this.state.user.counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonChange: this.onButtonChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahmedhafez/Desktop/Beta/face-detection/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","SignIn","Register","Particles","Polygonparticles","polygon","enable","type","move","radius","initialState","input","imageUrl","box","route","isSignedin","user","id","name","email","counter","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiBox","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonChange","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React , { Component } from 'react'; \nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Ranking/Ranking';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport 'tachyons'; \n\n\n/*// patch nodejs environment, we need to provide an implementation of\n// HTMLCanvasElement and HTMLImageElement, additionally an implementation\n// of ImageData is required, in case you want to use the MTCNN\nconst { Canvas, Image } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image});\n\nconst image = document.getElementById('myImg')*/\n\n\nconst Polygonparticles = {\n                    polygon: {\n                        enable: true,\n                        type: 'inside',\n                        move: {\n                            radius: 20\n                        }\n                    }\n                };\n\nconst initialState = {\n      input : '', \n      imageUrl: '', \n      box: [],\n      route: 'signin',\n      isSignedin: false,\n      user:\n      { \n        id: '',\n        name: '',\n        email: '',\n        counter: 0,\n        joined: ''\n      }\n    };\n\nclass App extends Component { \n  constructor(){\n    super()\n    this.state = initialState;\n  } \n\n  loadUser = (data) => {\n    this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      counter: data.counter,\n      joined: data.joined\n\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('imageId');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiBox.left_col * width, \n      rightCol: width - (clarifaiBox.right_col * width),\n      topRow: clarifaiBox.top_row * height,\n      bottomRow: height - (clarifaiBox.bottom_row * height) \n     };\n  }\n\n  displayFaceBox = (box) => {\n      this.setState({box:box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value}); \n  }\n\n  onButtonChange = () => {\n   this.setState({imageUrl: this.state.input});\n    // console.log(this.state.user);\n\n     fetch('http://localhost:3000/imageurl', {\n      method: 'post',\n      headers: {'Content-Type' : 'application/json'},\n      body: JSON.stringify({\n        id: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type' : 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {counter: count.counter}))\n          //this.setState({user:{count}});\n        })\n        .catch(err => {\n          console.log(err);\n         });\n      }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState);\n    }\n    else if(route === 'home'){\n      this.setState({isSignedin: true})\n    }\n    this.setState({route: route});\n  }\n  render() {\n    const { imageUrl, route, box, isSignedin } = this.state ; \n    return (\n      <div className=\"App\"> \n        <Particles className= 'particles' params = {Polygonparticles}/>\n        <Navigation isSignedin={isSignedin} onRouteChange={this.onRouteChange} />\n        <Logo /> \n        { route === 'home'\n          ? <div>\n              <Rank\n              name={this.state.user.name}\n              counter={this.state.user.counter}/> \n              <ImageLinkForm onInputChange={this.onInputChange} onButtonChange={this.onButtonChange} /> \n              <FaceRecognition box = {box} imageUrl={imageUrl}/>  \n            </div>\n          :  route === 'signin' \n              ? <SignIn loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n             \n        }\n      </div> \n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}